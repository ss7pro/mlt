# Copyright (c) 2018 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: EPL-2.0
#

# NOTE: they also have one for sshd but it's not been tagged recently
FROM qnib/uplain-openmpi:2018-06-10_11-18 as ubuntu_cpu_install

RUN apt-get update && apt-get install -y --no-install-recommends \
    openssh-client \
    openssh-server \
    python3-dev

ENV CONDA_DIR /opt/anaconda3
RUN mkdir -p $CONDA_DIR

# Download and Install Miniconda
ARG CONDA_VERSION="3-4.5.4"
RUN \
    wget -q --no-check-certificate https://repo.continuum.io/miniconda/Miniconda${CONDA_VERSION}-Linux-x86_64.sh -P $CONDA_DIR && \
    bash $CONDA_DIR/Miniconda${CONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm -rf $CONDA_DIR/Miniconda${CONDA_VERSION}*x86_64.sh

# Add conda binaries to path
ENV PATH $CONDA_DIR/bin:$PATH

ENV LD_LIBRARY_PATH=/usr/lib/openmpi/:$LD_LIBRARY_PATH

# Symlink to anaconda python, otherwise horovod import fails.
RUN ln -sf /opt/anaconda3/bin/python /usr/bin/python

# Install MKL optimized tensorflow.
# If you wish to use general tensorflow. Please comment conda install -c anaconda tensorflow
# and include tensorflow version in requirements.txt
ARG TF_VERSION="1.8.0"
RUN conda install -c anaconda tensorflow==$TF_VERSION && \
    conda install pip && \
    conda clean --all

FROM ubuntu_cpu_install AS ubuntu_cpu

# Install requirements
ADD requirements.txt /src/deps/requirements.txt
RUN pip install -r /src/deps/requirements.txt

# Create a wrapper for OpenMPI to allow running as root by default
RUN mv /usr/bin/mpirun /usr/bin/mpirun.real && \
    echo '#!/bin/bash' > /usr/bin/mpirun && \
    echo 'mpirun.real --allow-run-as-root "$@"' >> /usr/bin/mpirun && \
    chmod a+x /usr/bin/mpirun

# Configure OpenMPI to run good defaults:
RUN echo "hwloc_base_binding_policy = none" >> /usr/local/etc/openmpi-mca-params.conf && \
    echo "rmaps_base_mapping_policy = slot" >> /usr/local/etc/openmpi-mca-params.conf && \
    echo "btl_tcp_if_exclude = lo,docker0" >> /usr/local/etc/openmpi-mca-params.conf

RUN mkdir -p /var/run/sshd

# Allow OpenSSH to talk to containers without asking for confirmation
RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
    echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config

WORKDIR /src/app
ADD . /src/app

RUN pycodestyle -v .
